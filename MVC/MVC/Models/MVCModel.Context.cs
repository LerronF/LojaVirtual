//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LojaVirtualEntities : DbContext
    {
        public LojaVirtualEntities()
            : base("name=LojaVirtualEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Produto> Produtos { get; set; }
    
        public virtual ObjectResult<Produto> spDeleteProduto(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Produto>("spDeleteProduto", codigoParameter);
        }
    
        public virtual ObjectResult<Produto> spDeleteProduto(Nullable<int> codigo, MergeOption mergeOption)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Produto>("spDeleteProduto", mergeOption, codigoParameter);
        }
    
        public virtual ObjectResult<Produto> spInsertProduto(Nullable<int> codigo, string descricao, Nullable<int> estoque)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("Descricao", descricao) :
                new ObjectParameter("Descricao", typeof(string));
    
            var estoqueParameter = estoque.HasValue ?
                new ObjectParameter("Estoque", estoque) :
                new ObjectParameter("Estoque", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Produto>("spInsertProduto", codigoParameter, descricaoParameter, estoqueParameter);
        }
    
        public virtual ObjectResult<Produto> spInsertProduto(Nullable<int> codigo, string descricao, Nullable<int> estoque, MergeOption mergeOption)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("Descricao", descricao) :
                new ObjectParameter("Descricao", typeof(string));
    
            var estoqueParameter = estoque.HasValue ?
                new ObjectParameter("Estoque", estoque) :
                new ObjectParameter("Estoque", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Produto>("spInsertProduto", mergeOption, codigoParameter, descricaoParameter, estoqueParameter);
        }
    
        public virtual ObjectResult<Produto> spSelectProduto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Produto>("spSelectProduto");
        }
    
        public virtual ObjectResult<Produto> spSelectProduto(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Produto>("spSelectProduto", mergeOption);
        }
    
        public virtual ObjectResult<Produto> spUpdateProduto(Nullable<int> codigo, string descricao, Nullable<int> estoque)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("Descricao", descricao) :
                new ObjectParameter("Descricao", typeof(string));
    
            var estoqueParameter = estoque.HasValue ?
                new ObjectParameter("Estoque", estoque) :
                new ObjectParameter("Estoque", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Produto>("spUpdateProduto", codigoParameter, descricaoParameter, estoqueParameter);
        }
    
        public virtual ObjectResult<Produto> spUpdateProduto(Nullable<int> codigo, string descricao, Nullable<int> estoque, MergeOption mergeOption)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var descricaoParameter = descricao != null ?
                new ObjectParameter("Descricao", descricao) :
                new ObjectParameter("Descricao", typeof(string));
    
            var estoqueParameter = estoque.HasValue ?
                new ObjectParameter("Estoque", estoque) :
                new ObjectParameter("Estoque", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Produto>("spUpdateProduto", mergeOption, codigoParameter, descricaoParameter, estoqueParameter);
        }
    }
}
